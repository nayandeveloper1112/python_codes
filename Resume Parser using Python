import docx2txt
import re
import spacy
from pdfminer.high_level import extract_text

# Load SpaCy NLP model
nlp = spacy.load("en_core_web_sm")

# Load skill keywords from a file
with open("skills.txt", "r") as f:
    skills_list = [skill.strip().lower() for skill in f.readlines()]

def extract_text_from_file(file_path):
    if file_path.endswith(".pdf"):
        return extract_text(file_path)
    elif file_path.endswith(".docx"):
        return docx2txt.process(file_path)
    else:
        return ""

def extract_name(text):
    doc = nlp(text)
    for ent in doc.ents:
        if ent.label_ == "PERSON":
            return ent.text
    return "Not found"

def extract_email(text):
    match = re.search(r"\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Z|a-z]{2,}\b", text)
    return match.group() if match else "Not found"

def extract_phone(text):
    match = re.search(r"(\+91[\-\s]?)?\d{10}|\(\d{3}\)\s?\d{3}-\d{4}", text)
    return match.group() if match else "Not found"

def extract_skills(text):
    text = text.lower()
    found = [skill for skill in skills_list if skill in text]
    return list(set(found)) if found else ["Not found"]

def parse_resume(file_path):
    text = extract_text_from_file(file_path)
    print("\n--- Resume Parsed Data ---")
    print("Name     :", extract_name(text))
    print("Email    :", extract_email(text))
    print("Phone    :", extract_phone(text))
    print("Skills   :", ", ".join(extract_skills(text)))

if __name__ == "__main__":
    file = input("Enter path to resume (.pdf or .docx): ")
    parse_resume(file)
